[pytest]
# Pytest configuration for knowledge-database

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Asyncio configuration
asyncio_mode = auto

# Coverage options
addopts = 
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=85
    --verbose
    --strict-markers
    --tb=short
    --maxfail=10
    -p no:warnings

# Environment variables
env_files = .env.test

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for API endpoints and services
    e2e: End-to-end tests for complete workflows
    performance: Performance and load tests
    security: Security and vulnerability tests
    slow: Tests that take > 1 second to run
    memory: Tests for memory usage and constraints
    auth: Authentication and authorization tests
    crud: CRUD operation tests
    search: Search functionality tests
    translation: Translation service tests
    admin: Admin functionality tests

# Coverage exclusions
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */__init__.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if False:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test output configuration
[tool:pytest]
console_output_style = progress
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout configuration
timeout = 30
timeout_method = thread

# Memory limit configuration (6GB)
[pytest.limit]
memory = 6144MB