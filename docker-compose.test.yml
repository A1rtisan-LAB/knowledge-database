version: '3.9'

services:
  # PostgreSQL with asyncpg driver support
  postgres-test:
    image: postgres:16-alpine
    container_name: knowledge-postgres-test
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: knowledge_test
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"  # Different port to avoid conflict with main DB
    volumes:
      - ./tests/fixtures/init_test.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d knowledge_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - knowledge-test-network
    tmpfs:
      - /var/lib/postgresql/data  # Use RAM for faster tests

  # OpenSearch (single node for testing)
  opensearch-test:
    image: opensearchproject/opensearch:2.11.0
    container_name: knowledge-opensearch-test
    environment:
      - cluster.name=knowledge-test-cluster
      - node.name=opensearch-test-node
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms256m -Xmx256m"  # Reduced memory for testing
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "COMPATIBILITY_OVERRIDE_MAIN_RESPONSE_VERSION=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9201:9200"  # Different port to avoid conflict
      - "9601:9600"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - knowledge-test-network
    tmpfs:
      - /usr/share/opensearch/data  # Use RAM for faster tests

  # Redis (minimal configuration for testing)
  redis-test:
    image: redis:7-alpine
    container_name: knowledge-redis-test
    ports:
      - "6380:6379"  # Different port to avoid conflict
    command: >
      redis-server
      --save ""
      --appendonly no
      --maxmemory 100mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - knowledge-test-network
    tmpfs:
      - /data  # Use RAM for faster tests

  # Test Runner Service
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test
    container_name: knowledge-test-runner
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://testuser:testpass@postgres-test:5432/knowledge_test
      TEST_DATABASE_URL: postgresql+asyncpg://testuser:testpass@postgres-test:5432/knowledge_test
      
      # OpenSearch
      OPENSEARCH_HOST: opensearch-test
      OPENSEARCH_PORT: 9200
      
      # Redis
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_DB: 0
      
      # Application
      ENVIRONMENT: test
      TESTING: "true"
      SECRET_KEY: test-secret-key-for-testing-only
      JWT_ALGORITHM: HS256
      JWT_EXPIRATION_DELTA: 3600
      
      # Testing
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      PYTEST_ADDOPTS: "-v --tb=short --color=yes"
    volumes:
      - ./app:/app/app:ro
      - ./tests:/app/tests:ro
      - ./pytest.ini:/app/pytest.ini:ro
      - ./requirements-test.txt:/app/requirements-test.txt:ro
      - ./coverage:/app/coverage:rw
      - ./htmlcov:/app/htmlcov:rw
    command: >
      sh -c "
        echo 'Waiting for services to be ready...' &&
        sleep 10 &&
        echo 'Running tests...' &&
        pytest tests/ --cov=app --cov-report=html --cov-report=xml --cov-report=term
      "
    depends_on:
      postgres-test:
        condition: service_healthy
      opensearch-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - knowledge-test-network

networks:
  knowledge-test-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-knowledge-test